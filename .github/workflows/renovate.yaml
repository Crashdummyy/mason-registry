name: Renovate
on:
  workflow_dispatch:
  schedule:
    - cron: "1 */12 * * *"

jobs:
  check-open-prs:
    runs-on: ubuntu-latest
    outputs:
      hasOpenPrs: ${{ steps.check.outputs.hasOpenPrs }}
    steps:
      - name: Check for open PRs
        id: check
        run: |
          prs=$(curl -s -H "Authorization: token ${{ secrets.RW_GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls?state=open")
          count=$(echo "$prs" | jq length)
          echo "Found $count open pull requests"
          if [[ "$count" -gt 0 ]]; then
            echo "Detected open prs. Automatic updates will be skipped"
            echo "hasOpenPrs=true" >> "$GITHUB_OUTPUT"
          else
            echo "hasOpenPrs=false" >> "$GITHUB_OUTPUT"
          fi

  renovate:
    runs-on: ubuntu-latest
    needs: check-open-prs
    if: needs.check-open-prs.outputs.hasOpenPrs == 'false'
    steps:
      - name: Get vscode-csharp releases
        id: vscode
        run: |
          versionlist=$(curl https://raw.githubusercontent.com/dotnet/vscode-csharp/refs/heads/main/package.json | jq '.["defaults"]')

          echo "roslyn=$(echo $versionlist | jq '.["roslyn"]' | cut -d '"' -f2)" >> "$GITHUB_OUTPUT"
          echo "rzls=$(echo $versionlist | jq '.["razor"]' | cut -d '"' -f2)" >> "$GITHUB_OUTPUT"

      - name: Assert stable releases are frozen ( prevent cleanup )
        env:
          GITHUB_TOKEN: ${{ secrets.RW_GITHUB_TOKEN }}
        run: |
          roslynFrozen=$(gh variable get FROZENRELEASES -R Crashdummyy/roslynLanguageServer)
          rzlsFrozen=$(gh variable get FROZENRELEASES -R Crashdummyy/rzls)

          if [[ "$roslynFrozen" = *"${{ steps.vscode.outputs.roslyn }}"* ]];then
            echo "roslyn stable is still unchanged"
          else
            gh variable set FROZENRELEASES --body "${roslynFrozen};${{ steps.vscode.outputs.roslyn }}" -R Crashdummyy/roslynLanguageServer
          fi

          if [[ "$rzlsFrozen" = *"${{ steps.vscode.outputs.rzls }}"* ]];then
            echo "rzls stable is still unchanged"
          else
            gh variable set FROZENRELEASES --body "${rzlsFrozen};${{ steps.vscode.outputs.rzls }}" -R Crashdummyy/rzls
          fi

      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: master
          token: ${{ secrets.RW_GITHUB_TOKEN }}

      - name: Configure git
        run: |
          git config user.name Crashdummyy
          git config user.email Simon.Schwendele@gmx.de
          git config http.sslVerify false
          git checkout -b "updates_${{ github.run_id }}"

      - name: Update stables
        working-directory: packages
        run: |
          sed -i "s|roslynLanguageServer\@.*|roslynLanguageServer\@${{ steps.vscode.outputs.roslyn }}|"  roslyn/package.yaml
          sed -i "s|rzls\@.*|rzls\@${{ steps.vscode.outputs.rzls }}|"  rzls/package.yaml

      - name: Update unstables
        env:
          GITHUB_TOKEN: ${{ secrets.RW_GITHUB_TOKEN }}
        working-directory: packages
        run: |
          latestRoslyn=$(gh release view -R crashdummyy/roslynLanguageServer --json tagName -q .tagName)
          latestRzls=$(gh release view -R crashdummyy/rzls --json tagName -q .tagName)

          sed -i "s|roslynLanguageServer\@.*|roslynLanguageServer\@${latestRoslyn}|"  roslyn-unstable/package.yaml
          sed -i "s|rzls\@.*|rzls\@${latestRzls}|"  rzls-unstable/package.yaml

      - name: Create PR if required
        env:
          GITHUB_TOKEN: ${{ secrets.RW_GITHUB_TOKEN }}
        run: |
          if [[ $(git diff --name-only | wc -l) -gt 0 ]];then
            echo "detected changes";
            git diff --name-only

            git add "./packages"
            git commit -m "Renovate"
            git push -u origin HEAD

            gh pr create --title "Renovate updates" --body "General system stability improvements to enhance the users experience"
          else
            echo "No updates detected. Skipping PR"
            exit 0
          fi

